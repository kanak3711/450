// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
         vector<int> vis(V,0);
        for(int i=0;i<V;i++)
        {
            if(vis[i]==0)
            {
                queue<int> q;q.push(i);vis[i]=1;
                while(q.size()>0)
                {
                     int g=q.front();
                        q.pop();
                        for(auto k:adj[g])
                        {
                            if(vis[k]==0)
                            {
                                q.push(k);
                                vis[k]=1;
                            }
                            else
                            {
                                if(k!=g)
                                return true;
                            }
                        }
                        
                        
                        
                    
                }
            }
            
        }
        return false;
              
    }
};

// { Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >> E;
        vector<int> adj[V];
        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        Solution obj;
        bool ans = obj.isCycle(V, adj);
        if (ans)
            cout << "1\n";
        else
            cout << "0\n";
    }
    return 0;
}  // } Driver Code Ends
